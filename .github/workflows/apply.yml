name: Apply to AWS

on:
    release:
        types: [created]

jobs:
    deploy:
        runs-on: ubuntu-latest
        environment: ${{ github.event.release.prerelease && 'staging' || 'production' }}
        steps:
          - name: Checkout terraform
            uses: actions/checkout@v4

          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: eu-west-2

          - name: Setup Terraform
            uses: hashicorp/setup-terraform@v1
            with:
              terraform_version: 1.5.7

          - name: Terraform init and validate
            run: |
              terraform init

          - name: Terraform plan
            run: |
              terraform plan

          - name: Manual approval (production only)
            if: ${{ !github.event.release.prerelease }}
            uses: trstringer/manual-approval@v1
            with:
              secret: ${{ secrets.GITHUB_TOKEN }}
              approvers: jonathan-gaul
              minimum-approvals: 1
              issue-title: "Production deployment approval required"
              issue-body: "Please approve this production deployment."

          - name: Terraform apply
            env:
              TF_VAR_check_batches_for_update_package_key=${{ vars.TF_VAR_CHECK_BATCHES_FOR_UPDATE_PACKAGE_KEY }}
              TF_VAR_query_words_package_key=${{ vars.TF_VAR_QUERY_WORDS_PACKAGE_KEY }}
              TF_VAR_update_batch_status_package_key=${{ vars.TF_VAR_UPDATE_BATCH_STATUS_PACKAGE_KEY }}
              TF_VAR_update_from_source_package_key=${{ vars.TF_VAR_UPDATE_FROM_SOURCE_PACKAGE_KEY }}
              TF_VAR_update_word_package_key=${{ vars.TF_VAR_UPDATE_WORD_PACKAGE_KEY }}
            run: |
              terraform apply -auto-approve